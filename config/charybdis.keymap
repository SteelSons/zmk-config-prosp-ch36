#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0	
#define MOUSE 1
#define FUNCTION 2
#define NUMBER 3
#define GAME 4
#define RESET 5

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define THUMBS 30 31 32 33 34 35

&sk {
    release-after-ms = <600>;
    quick-release;
};

&sl { ignore-modifiers; };

&mt { flavor = "tap-preferred"; };

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
};

&caps_word { /delete-property/ ignore-modifiers; };

/ {
  split_inputs {
    #address-cells = <1>;
    #size-cells = <0>;

    trackball_split: trackball_split@0 {
      compatible = "zmk,input-split";
      reg = <0>;
    };
  };

  trackball_listener: trackball_listener {
    compatible = "zmk,input-listener";
//    status = "okay";
    device = <&trackball_split>;

    snipe {
      layers = <NUMBER>;
      input-processors = <&zip_xy_scaler 1 3>;
    };
	
    scroll {
      layers = <FUNCTION>;
      input-processors = <&zip_xy_transform (INPUT_TRANSFORM_Y_INVERT)>, <&zip_xy_scaler 1 3>, <&zip_xy_to_scroll_mapper>;
    };

    move {
      layers = <MOUSE>;
      input-processors = <&auto_mouse_layer MOUSE 5000>;
    };
  };

  auto_mouse_layer: auto_mouse_layer {
    compatible = "zmk,input-processor-temp-layer";
    #input-processor-cells = <2>;
    require-prior-idle-ms = <500>;
    excluded-positions = <36 37 38 30 31 32 16 17 18 10 11 12 13 22 23>;
  };
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hml_s: hml_s {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <0>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hmr_s: hmr_s {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <0>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        smart_shift: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&caps_word>;

            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";
        timeout-ms = <20>;
        require-prior-idle-ms = <250>;

        combo_reset_layer_left {
            key-positions = <20 24>;
            bindings = <&to RESET>;
        };

        combo_reset_layer_right {
            key-positions = <25 29>;
            bindings = <&to RESET>;
        };

        combo_reset_central {
            key-positions = <32 33>;
            bindings = <&bootloader>;
            require-prior-idle-ms = <2000>;
        };

        combo_normal {
            key-positions = <7 8>;
            bindings = <&to BASE>;
        };

        combo_fn {
            key-positions = <27 28>;
            bindings = <&sl FUNCTION>;
        };

        combo_game {
            key-positions = <5 9>;
            bindings = <&to GAME>;
        };

        combo_esc {
            key-positions = <1 2>;
            bindings = <&kp ESCAPE>;
        };

        combo_tab {
            key-positions = <2 3>;
            bindings = <&kp TAB>;
        };

        combo_cdel {
            key-positions = <11 12>;
            bindings = <&kp LC(BACKSPACE)>;
        };

        combo_unlock {
            key-positions = <0 4>;
            bindings = <&studio_unlock>;
        };
    };

    chosen { zmk,physical-layout = &charybdis_6col_layout; };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";

            // .---------------------------------------------------------------------.               .------------------------------------------------------------------------.
            // |   ESC      |    Q    |    W   |   E    |      R       |      T      |               |     Y     |      U       |      I      |    O    |     P    |    [     |
            // |------------+---------+--------+--------+--------------+-------------|               |-----------+--------------+-------------+---------+----------+----------|
            // | CTRL/TAB   |    A    |    S   |   D    |      F       |      G      |               |     H     |      J       |      K      |    L    |     ;    |    '     |
            // |------------+---------+--------+--------+--------------+-------------|               |-----------+--------------+-------------+---------+----------+----------|
            // | SHFT/TAB   |    Z    |    X   |   C    |      V       |      B      |               |     N     |      M       |      ,      |    .    |     /    |    ]     |
            // '-------------------------------+--------+--------------+-------------+               |-----------+--------------+-------------+-------------------------------'
            //                                 |  ALT   |FUNCTION/SPACE|  NUMBER/RET |               |  GUI/RET  |     SHFT     |
            //                                 '--------+--------------+-------------'               '-----------+--------------'

            bindings = <
&kp ESC        &kp Q  &kp W  &kp E     &kp R               &kp T             &kp Y             &kp U      &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&mt LCTRL TAB  &kp A  &kp S  &kp D     &kp F               &kp G             &kp H             &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&mt LSHFT TAB  &kp Z  &kp X  &kp C     &kp V               &kp B             &kp N             &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_BRACKET
                             &kp LALT  &lt FUNCTION SPACE  &lt NUMBER RET    &mt LEFT_GUI RET  &kp LSHFT
            >;
        };

        Mouse {
            display-name = "Mouse";
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans      &trans  &trans    &trans    &trans    &trans  &trans
&trans  &kp LGUI  &kp LALT  &kp LSHFT  &kp LCTRL  &trans      &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans  &trans
&trans  &trans    &trans    &mo 3      &mo 2      &trans      &trans  &trans    &trans    &trans    &trans  &trans
                            &mkp MB1   &mkp MB2   &mkp MB3    &trans  &trans
            >;
        };

        Fun {
            display-name = "Function";

            // .-----------------------------------------------------------------.                .------------------------------------------------------------------------.
            // |   	 F1 	|     F2    |   F3   |   F4   |     F5    |   F6     |                |    F7    |      F8     |    F9   |   F10      |    F11   |    F12      |
            // |------------+-----------+--------+--------+-----------+----------|                |----------+-------------+---------+------------+----------+-------------|
            // |  CTRL/TAB  |PAUSE_BREAK|   PD   |   PU   |   MENU    |   DEL    |                |   LEFT   |     DOWN    |    UP   |   RIGHT    |   BKSP   |             |
            // |------------+-----------+--------+--------+-----------+----------|                |----------+-------------+---------+------------+----------+-------------|
            // |  SHFT/TAB  |           |        |  COPY  |   PASTE   |CTRL+LEFT |                |CTRL+RIGHT|    HOME     |   END   |   INSERT   |   CAPS   |  SCROLLLOCK |
            // '---------------------------------+--------+-----------+----------+                |----------+-------------+---------+-------------------------------------'
            //                                   |  ALT   |           |  RESET   |                |  GUI/RET |    SHFT     |
            //                                   '--------+-----------+----------'                '----------+-------------'

            bindings = <
&kp F1  &kp F2           &kp F3         &kp F4       &kp F5       &kp F6                    &kp F7                   &kp F8          &kp F9        &kp F10          &kp F11   &kp F12
&trans  &kp PAUSE_BREAK  &kp PAGE_DOWN  &kp PAGE_UP  &kp K_CMENU  &kp DEL                   &kp LEFT_ARROW           &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp BSPC  &trans
&trans  &trans           &trans         &kp LC(INS)  &kp LS(INS)  &kp LC(LG(LEFT_ARROW))    &kp LC(LG(RIGHT_ARROW))  &kp HOME        &kp END       &kp INSERT       &kp CAPS  &kp SCROLLLOCK
                                        &trans       &trans       &mo RESET                 &trans                   &trans
            >;
        };

        Num {
            display-name = "Number";

            // .--------------------------------------------------------------.                   .-----------------------------------------------------------.
            // |     `        |    !    |    @   |   #    |    $    |    %    |                   | NUM - |    7    |    8    |    9    |     =    |     /    |
            // |--------------+---------+--------+--------+---------+---------|                   |-------+---------+---------+---------+----------+----------|
            // |   CTRL/TAB   |    ^    |    &   |   *    |    {    |    }    |                   |   +   |    4    |    5    |    6    |     (    |     )    |
            // |--------------+---------+--------+--------+---------+---------|                   |-------+---------+---------+---------+----------+----------|
            // |   SHFT/TAB   |    \    |    ,   |   .    |    [    |    ]    |                   |   0   |    1    |    2    |    3    |     -    |  NUMLOCK |
            // '---------------------------------+--------+---------+---------+                   |-------+---------+---------+-------------------------------'
            //                                   |  ALT   |  RESET  |         |                   | SPACE |   SHFT  |
            //                                   '--------+---------+---------'                   '-------+---------'

            bindings = <
&kp GRAVE  &kp EXCL       &kp AT     &kp HASH         &kp DLLR          &kp PRCNT            &kp KP_MINUS  &kp N7     &kp N8  &kp N9  &kp EQUAL  &kp KP_DIVIDE
&trans     &kp CARET      &kp AMPS   &kp KP_MULTIPLY  &kp LEFT_BRACE    &kp RIGHT_BRACE      &kp KP_PLUS   &kp N4     &kp N5  &kp N6  &kp LPAR   &kp RPAR
&trans     &kp BACKSLASH  &kp COMMA  &kp DOT          &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp N0        &kp N1     &kp N2  &kp N3  &kp MINUS  &kp LOCKING_NUM
                                     &trans           &mo RESET         &trans               &kp SPACE     &kp LSHFT
            >;
        };

        Button {
            display-name = "Game";
            bindings = <
&trans  &kp ESCAPE  &kp Q  &kp W     &kp E      &kp R    &none   &none     &none     &none     &none   &trans
&trans  &kp LCTRL   &kp A  &kp S     &kp D      &kp F    &none   &mkp MB1  &mkp MB3  &mkp MB2  &none   &trans
&trans  &kp LSHIFT  &kp Z  &kp X     &kp C      &kp V    &kp N1  &kp N2    &kp N3    &kp N4    &kp N5  &trans
                           &kp LALT  &kp SPACE  &kp M    &kp T   &kp B
            >;
        };

        Reset {
            display-name = "Reset";
            bindings = <
&trans  &none  &none  &none  &none  &none          &none        &none  &none  &none  &none  &trans
&trans  &none  &none  &none  &none  &none          &none        &none  &none  &none  &none  &trans
&trans  &none  &none  &none  &none  &none          &none        &none  &none  &none  &none  &trans
                      &none  &none  &bootloader    &bootloader  &none
            >;
        };
    };
};
