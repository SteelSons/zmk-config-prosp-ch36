#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 3 4 5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
        bindings = <&ib_toggle_layer 5>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";   
        device = <&vtrackball>;
        layers = <>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <12>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1>;
        evt-type = <INPUT_EV_REL>;            
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 16>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = 
                <&mo>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
// .----------------------------------------------------------------.               .------------------------------------------------------------------------.
// |   ESC      |    Q    |    W   |   E    |    R    |      T      |               |     Y     |      U       |      I      |    O    |     P    |    [     |
// |------------+---------+--------+--------+---------+-------------|               |-----------+--------------+-------------+---------+----------+----------|
// | CTRL/TAB   |    A    |    S   |   D    |    F    |      G      |               |     H     |      J       |      K      |    L    |     ;    |    '     |
// |------------+---------+--------+--------+---------+-------------|               |-----------+--------------+-------------+---------+----------+----------|
// | SHFT/TAB   |    Z    |    X   |   C    |    V    |      B      |               |     N     |      M       |      ,      |    .    |     /    |    ]     |
// '-------------------------------+--------+---------+-------------+               |-----------+--------------+-------------+-------------------------------'
//                                 |  ALT   |MO2/SPACE|   MO1/RET   |               |    GUI    |     SHFT     |
//                                 '--------+---------+-------------'               '-----------+--------------'
            bindings = <
   &kp ESC        &kp Q     &kp W      &kp E     &kp R           &kp T              &kp Y          &kp U           &kp I        &kp O     &kp P      &kp LEFT_BRACKET
   &mt LCTRL TAB  &kp A     &kp S      &kp D     &kp F           &kp G      	    &kp H          &kp J           &kp K        &kp L     &kp SEMI   &kp SQT
   &mt LSHFT TAB  &kp Z     &kp X      &kp C     &kp V           &kp B      	    &kp N          &kp M           &kp COMMA    &kp DOT   &kp FSLH   &kp RIGHT_BRACKET
									   &kp LALT  &lt 2 SPACE     &lt 1 RET          &kp LGUI       &kp LSHFT
                        >;
        };

        Lower {
            label = "Lower";
// .--------------------------------------------------------------.                   .-----------------------------------------------------------.
// |     `        |    !    |    @   |   #    |    $    |    %    |                   | NUM - |    7    |    8    |    9    |     =    |     /    |
// |--------------+---------+--------+--------+---------+---------|                   |-------+---------+---------+---------+----------+----------|
// |   CTRL/TAB   |    ^    |    &   |   *    |    {    |    }    |                   |   +   |    4    |    5    |    6    |     (    |     )    |
// |--------------+---------+--------+--------+---------+---------|                   |-------+---------+---------+---------+----------+----------|
// |   SHFT/TAB   |    \    |    ,   |   .    |    [    |    ]    |                   |   0   |    1    |    2    |    3    |     -    |  NUMLOCK |
// '---------------------------------+--------+---------+---------+                   |-------+---------+---------+-------------------------------'
//                                   |  ALT   |   MO3   |         |                   | SPACE |   SHFT  |
//                                   '--------+---------+---------'                   '-------+---------'
                        bindings = <
   &kp GRAVE  &kp EXCL       &kp AT        &kp HASH        &kp DLLR             &kp PRCNT             &kp KP_MINUS  &kp N7        &kp N8      &kp N9   &kp EQUAL          &kp KP_DIVIDE
   &trans     &kp CARET      &kp AMPS      &kp KP_MULTIPLY &kp LEFT_BRACE       &kp RIGHT_BRACE       &kp KP_PLUS   &kp N4        &kp N5      &kp N6   &kp LPAR           &kp RPAR
   &trans     &kp BACKSLASH  &kp COMMA     &kp DOT         &kp LEFT_BRACKET     &kp RIGHT_BRACKET     &kp N0        &kp N1        &kp N2      &kp N3   &kp MINUS          &kp LOCKING_NUM
                                           &trans          &mo 3                &trans                &kp SPACE     &kp LSHFT
                        >;
        };

        Raise {
            label = "Raise";
// .-----------------------------------------------------------------.                .------------------------------------------------------------------------.
// |   	 F1 	|     F2    |   F3   |   F4   |     F5    |   F6     |                |    F7    |      F8     |    F9   |   F10      |    F11   |    F12      |
// |------------+-----------+--------+--------+-----------+----------|                |----------+-------------+---------+------------+----------+-------------|
// |  CTRL/TAB  |PAUSE_BREAK|   PD   |   PU   |   MENU    |   DEL    |                |   LEFT   |     DOWN    |    UP   |   RIGHT    |   BKSP   |  SCROLLLOCK |
// |------------+-----------+--------+--------+-----------+----------|                |----------+-------------+---------+------------+----------+-------------|
// |  SHFT/TAB  |           |        |  COPY  |   PASTE   |CTRL+LEFT |                |CTRL+RIGHT|    HOME     |   END   |   INSERT   |   CAPS   |             |
// '---------------------------------+--------+-----------+----------+                |----------+-------------+---------+-------------------------------------'
//                                   |  ALT   |           |    MO3   |                |    GUI   |    SHFT     |
//                                   '--------+-----------+----------'                '----------+-------------'

                        bindings = <
   &kp F1		   &kp F2   		  &kp F3             &kp F4            &kp F5              &kp F6                  &kp F7               &kp F8              &kp F9		   &kp F10             &kp F11     &kp F12
   &trans          &kp PAUSE_BREAK    &kp PAGE_DOWN	     &kp PAGE_UP       &kp K_CMENU         &kp DEL                 &kp LEFT_ARROW       &kp DOWN_ARROW      &kp UP_ARROW   &kp RIGHT_ARROW     &kp BSPC    &kp SCROLLLOCK
   &trans		   &trans    		  &trans             &kp LC(INS)       &kp LS(INS)         &kp LC(LEFT_ARROW)      &kp LC(RIGHT_ARROW)  &kp HOME            &kp END        &kp INSERT          &kp CAPS    &trans
                                                         &trans            &trans              &mo 3                   &trans               &trans        
                        >;
        };

        Adjust {
            label = "Adjust";
// .--------------------------------------------------------.       .------------------------------------------------------------------.
// |         |        |        |        |         |         |       |  VOL+  |        |         |             |          | bootloader  |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+-------------+----------+-------------|
// |         |        |        |        |         |         |       |  VOL-  |        |         |             |          |             |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+-------------+----------+-------------|
// |         |        |        |        |         |         |       |  MUTE  |        |         |             |          |             |
// '---------------------------+--------+---------+---------+       |--------+--------+---------+--------------------------------------'
//                             |        |         |         |       |        |        |
//                             '--------+---------+---------'       '--------+--------'

                        bindings = <
   &trans   &trans     &trans    &trans    &trans    &trans           &kp C_VOLUME_UP    &trans &trans &trans &trans &bootloader
   &trans   &trans     &trans    &trans    &trans    &trans           &kp C_VOLUME_DOWN  &trans &trans &trans &trans &trans
   &trans   &trans     &trans    &trans    &trans    &trans           &kp C_MUTE         &trans &trans &trans &trans &trans
                                 &trans   &trans     &trans           &trans   &trans
                        >;
        };

//        Game_++ {
//            label = "Game ++";
//            bindings = <
// &kt F5  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LC(RA(Y))  &kp LC(RA(U))  &kp LC(RA(I))  &kp LC(RA(H))  &kp LC(RA(J))  &kp LC(RA(DEL))
//  &to 3         &kp L         &kp O         &kp Y         &kp K         &kp G           &trans         &trans         &trans         &trans         &trans       &kp LA(F4)
//&kp F10         &none         &to 0         &none  &kp NUMBER_6  &kp NUMBER_7           &trans         &trans         &trans         &trans         &trans            &to 0
//                                            &kp J         &kp I         &kp M           &trans         &trans
//            >;
//        };
//
        Mouse {
// .--------------------------------------------------------.       .----------------------------------------------------------------.
// |         |        |        |        |         |         |       |        |        |         |             |          |           |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+-------------+----------+-----------|
// |         |        |        |        |         |         |       |        |        |         |             |          |           |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+-------------+----------+-----------|
// |   MCLK  |        |        |        |         |         |       |        |        |         |             |          |   LCLK    |
// '---------------------------+--------+---------+---------+       |--------+--------+---------+------------------------------------'
//                             |  LCLK  |         |   RCLK  |       |        |        |
//                             '--------+---------+---------'       '--------+--------'
            bindings = <
   &trans  &trans  &trans     &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans     &trans
   &trans  &trans  &trans     &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans     &trans
&mkp MCLK  &trans  &trans     &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &mkp LCLK
                           &mkp LCLK  &trans  &mkp RCLK    &trans  &trans
            >;
        };
    };
};
